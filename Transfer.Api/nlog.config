<?xml version="1.0" encoding="utf-8" ?>
<!--Configuration Settings: https://github.com/NLog/NLog/wiki/Configuration-file -->
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwExceptions="false">

  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>
  <targets>
    <target xsi:type="File"
                name="default"
                layout="${longdate} - ${level:uppercase=true}: ${message}${onexception:${newline}EXCEPTION\: ${exception:format=ToString}}   "
                fileName="C:\TransferLog\Logs\Debug\Debug.log"
                keepFileOpen="false"
                archiveFileName="C:\TransferLog\Logs\Debug\Debug_${shortdate}.{##}.log"
                archiveNumbering="Sequence"
                archiveEvery="Day"
                maxArchiveFiles="30"
               
            />

    <!--: ${replace:searchFor=password=:replaceWith=******:regex=true:inner=${message}-->
    <!--<variable name="replacePasswords" value="${replace:searchFor=(?i)(?&lt;=password=)(.*?)(?=(\;|$| )):replaceWith=******:regex=true:inner=${message}}" />-->
    <!--<variable name="replacedname"  value="${replace:searchFor=\\n+:replaceWith=:regex=true:inner=${message}}" />-->
    <target xsi:type="File"
                name="eventlog"
                layout="${longdate} - ${level:uppercase=true}: ${message}${onexception:${newline}EXCEPTION\: ${exception:format=ToString}}"
                fileName="C:\TransferLog\Logs\Errors\errors.log"
                keepFileOpen="false"
                archiveFileName="C:\TransferLog\Logs\Errors\errors_${shortdate}.{##}.log"
                archiveNumbering="Sequence"
                archiveEvery="Day"
                maxArchiveFiles="30"
            />
  </targets>
  <rules>
    <logger name="*" writeTo="default" minlevel="Info" >
      <filters>
        <when condition="(contains('${message}','password'))" action="Ignore"   />
      </filters>
    </logger>
    <logger name="*" writeTo="eventlog" minlevel="Error">
      <filters>
        <when condition="(contains('${message}','password'))" action="Ignore" />
      </filters>
    </logger>

  </rules>
</nlog>